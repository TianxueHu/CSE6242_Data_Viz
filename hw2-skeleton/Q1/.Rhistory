set.seed(1)
#scale data except col 2 and col 16
scale_data1 = scale(data[,1])
scale_data2 = scale(data[,c(1,3,4,5,6,7,8,9,10,11,12,13,14,15)])
head (scale_data1)
head (scale_data2)
#s_data = cbind(as.data.frame(scale_data1), as.data.frame(data[,2]),as.data.frame(scale_data2),
#as.data.frame(data[,16]))
scaled_data = cbind(scale_data1, data[,2],scale_data2,data[,16])
scaled_data
View(scaled_data)
View(scaled_data)
View(data)
View(scale_data1)
View(scale_data1)
View(data)
View(scaled_data)
#scale data except col 2 and col 16
scale_data1 = scale(data[,1])
head (scale_data1)
scale_data2 = scale(data[,c(3,4,5,6,7,8,9,10,11,12,13,14,15)])
head (scale_data2)
#s_data = cbind(as.data.frame(scale_data1), as.data.frame(data[,2]),as.data.frame(scale_data2),
#as.data.frame(data[,16]))
scaled_data = cbind(scale_data1, data[,2],scale_data2,data[,16])
scaled_data
head(data)
rm(list = ls())
data <- read.table("/Users/tianxuehu/Downloads/hw8/uscrime.txt", header = TRUE)
head(data)
summary(data)
set.seed(1)
#scale data except col 2 and col 16
scale_data1 = scale(data[,1])
head (scale_data1)
scale_data2 = scale(data[,c(3,4,5,6,7,8,9,10,11,12,13,14,15)])
head (scale_data2)
s_data = cbind(as.data.frame(scale_data1), as.data.frame(data[,2]),as.data.frame(scale_data2),
as.data.frame(data[,16]))
View(s_data)
install.packages("glmnet")
rm(list = ls())
data <- read.table("/Users/tianxuehu/Downloads/hw8/uscrime.txt", header = TRUE)
head(data)
summary(data)
set.seed(1)
#scale data except col 2 and col 16
scale_data1 = scale(data[,1])
head (scale_data1)
scale_data2 = scale(data[,c(3,4,5,6,7,8,9,10,11,12,13,14,15)])
head (scale_data2)
#s_data = cbind(as.data.frame(scale_data1), as.data.frame(data[,2]),as.data.frame(scale_data2),
#as.data.frame(data[,16]))
scaled_data = cbind(scale_data1, data[,2],scale_data2,data[,16])
#the headers of first 2 cols and response is missing after scaling
colnames(scaled_data) = colnames(data)
View(scaled_data)
#LASSO
lasso = cv.glmnet(x=as.matrix(scaled_data[,1:15]), y=as.matrix(scaled_data[,16]),alpha=1,
nfolds = 5, type.measure="mse",family="gaussian")
library(glmnet)
rm(list = ls())
data <- read.table("/Users/tianxuehu/Downloads/hw8/uscrime.txt", header = TRUE)
library(glmnet)
library(glmnet)
rm(list = ls())
data <- read.table("/Users/tianxuehu/Downloads/hw8/uscrime.txt", header = TRUE)
head(data)
summary(data)
set.seed(1)
#scale data except col 2(binary) and col 16(response)
scale_data1 = scale(data[,1])
head (scale_data1)
scale_data2 = scale(data[,c(3,4,5,6,7,8,9,10,11,12,13,14,15)])
head (scale_data2)
#s_data = cbind(as.data.frame(scale_data1), as.data.frame(data[,2]),as.data.frame(scale_data2),
#as.data.frame(data[,16]))
scaled_data = cbind(scale_data1, data[,2],scale_data2,data[,16])
#the headers of first 2 cols and response is missing after scaling
colnames(scaled_data) = colnames(data)
#LASSO
lasso = cv.glmnet(x=as.matrix(scaled_data[,1:15]), y=as.matrix(scaled_data[,16]),alpha=1,
nfolds = 5, type.measure="mse",family="gaussian")
View(lasso)
lasso$lambda
lasso$cvm
summary(data)
plot(model.lasso$lambda, model.lasso$cvm, main='Cross-validated MSE vs lamba')
plot(lasso$lambda, lasso$cvm, main='Cross-validated MSE vs lamba')
coef(lasso, s=lasso$lambda.min)
lasso$lambda.min
lasso$lambda #the values of lambda used in the fits.
lasso$cvm #The mean cross-validated error - a vector of length length(lambda).
lasso$lambda.min
lasso$cvm.min
#get coefficients
coef(lasso, lambda)
#get coefficients
coef(lasso, s = lambda)
#Choose lambda the smallest cvm
lambda = lasso$lambda.min
#get coefficients
coef(lasso, lambda)
library(glmnet)
rm(list = ls())
data <- read.table("/Users/tianxuehu/Downloads/hw8/uscrime.txt", header = TRUE)
set.seed(1)
#scale data except col 2(binary) and col 16(response)
scale_data1 = scale(data[,1])
head (scale_data1)
scale_data2 = scale(data[,c(3,4,5,6,7,8,9,10,11,12,13,14,15)])
head (scale_data2)
scaled_data = cbind(scale_data1, data[,2],scale_data2,data[,16])
#the headers of first 2 cols and response is missing after scaling
colnames(scaled_data) = colnames(data)
#LASSO
lasso = cv.glmnet(x=as.matrix(scaled_data[,1:15]), y=as.matrix(scaled_data[,16]),alpha=1,
nfolds = 5, type.measure="mse",family="gaussian")
lasso$lambda #the values of lambda used in the fits.
lasso$cvm #The mean cross-validated error - a vector of length length(lambda).
plot(lasso$lambda, lasso$cvm, main='Mean Cross-validated Error vs Lamba')
library(glmnet)
rm(list = ls())
data <- read.table("/Users/tianxuehu/Downloads/hw8/uscrime.txt", header = TRUE)
set.seed(1)
#LASSO
lasso = cv.glmnet(x=as.matrix(scaled_data[,1:15]), y=as.matrix(scaled_data[,16]),alpha=1,
nfolds = 5,family="gaussian")
lasso$lambda #the values of lambda used in the fits.
lasso$cvm #The mean cross-validated error - a vector of length length(lambda).
#scale data except col 2(binary) and col 16(response)
scale_data1 = scale(data[,1])
head (scale_data1)
scale_data2 = scale(data[,c(3,4,5,6,7,8,9,10,11,12,13,14,15)])
head (scale_data2)
scaled_data = cbind(scale_data1, data[,2],scale_data2,data[,16])
#the headers of first 2 cols and response is missing after scaling
colnames(scaled_data) = colnames(data)
#LASSO
lasso = cv.glmnet(x=as.matrix(scaled_data[,1:15]), y=as.matrix(scaled_data[,16]),alpha=1,
nfolds = 5,family="gaussian")
lasso$lambda #the values of lambda used in the fits.
lasso$cvm #The mean cross-validated error - a vector of length length(lambda).
plot(lasso$lambda, lasso$cvm, main='Mean Cross-validated Error vs Lamba')
lambda
#Choose lambda the smallest cvm
lambda = lasso$lambda.min
lambda
#get coefficients
coef(lasso, lambda)
lasso@$glmnet.fit
lasso$glmnet.fit$dev.ratio
lasso$glmnet.fit$dev.ratio[which(mod_elastic$glmnet.fit$lambda == mod_elastic$lambda.min)]
lasso$glmnet.fit$dev.ratio[which(lasso$glmnet.fit$lambda == lasso$lambda.min)]
cvm = c()
for (i in 0:10) {
elastic_net = cv.glmnet(x=as.matrix(scaled_data[,1:15]), y=as.matrix(scaled_data[,16]),
alpha=i/10,nfolds = 5,family="gaussian")
cvm = cbind(cvm,elastic_net$cvm[which(elastic_net$lamda == elastic_net$lambda.min)])
}
library(glmnet)
cvm = c()
for (i in 0:10) {
elastic_net = cv.glmnet(x=as.matrix(scaled_data[,1:15]), y=as.matrix(scaled_data[,16]),
alpha=i/10,nfolds = 5,family="gaussian")
cvm = cbind(cvm,elastic_net$cvm[which(elastic_net$lamda == elastic_net$lambda.min)])
}
cvm
cvm
View(cvm)
View(cvm)
elastic_net$lambda.min
which(elastic_net$lamda == elastic_net$lambda.min)
lasso$lambda #the values of lambda used in the fits.
#Choose lambda the smallest cvm
lambda = lasso$lambda.min
lambda
which(lasso$lamda == lambda)
lasso$glmnet.fit$$lambda #the values of lambda used in the fits.
lasso$glmnet.fit$lambda #the values of lambda used in the fits.
which(lasso$glmnet.fit$lamda == lambda)
lasso$lambda #the values of lambda used in the fits.
#Choose lambda the smallest cvm
lambda = lasso$lambda.min
lambda
lambda
which(lasso$glmnet.fit$lamda == lambda)
min(elastic_net$cvm)
min(elastic_net$cvm)
lasso$cvm #The mean cross-validated error - a vector of length length(lambda).
lasso$glmnet.fit$dev.ratio[which(lasso$glmnet.fit$lambda == lasso$lambda.min)]
cvm = c()
for (i in 0:10) {
elastic_net = cv.glmnet(x=as.matrix(scaled_data[,1:15]), y=as.matrix(scaled_data[,16]),
alpha=i/10,nfolds = 5,family="gaussian")
min(elastic_net$cvm)
cvm = cbind(cvm,min(elastic_net$cvm))
}
cvm
plot(cvm)
colnames(cvm) = ('0.1','0.2','0.3','0.4','0.5','0.6','0.7','0.8','0.9','1.0')
colnames(cvm) = c('0.1','0.2','0.3','0.4','0.5','0.6','0.7','0.8','0.9','1.0')
colnames(cvm) = c("0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0")
colnames(cvm.as.data.frame) = c("0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0")
colnames(as.data.frame(cvm)) = c("0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0")
colnames(cvm) = c("0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0")
min(cvm)
rm(list = ls())
MyData <- read.csv("/Users/tianxuehu/Downloads/data.csv", header=TRUE, sep=",")
View(MyData)
track_id = data.frame(table(Mydata$id))
track_id = data.frame(table(Mydata$track.id))
MyData <- read.csv("/Users/tianxuehu/Downloads/data.csv", header=TRUE, sep=",")
track_id = data.frame(table(Mydata$track.id))
Mydata[duplicated(Mydata$track.id),]
head(Mydata)
rm(list = ls())
MyData <- read.csv("/Users/tianxuehu/Downloads/data.csv", header=TRUE, sep=",")
head(Mydata)
head(Mydata)
rm(list = ls())
MyData <- read.csv("/Users/tianxuehu/Downloads/data.csv", header=TRUE, sep=",")
head(Mydata)
rm(list = ls())
MyData <- read.csv("/Users/tianxuehu/Downloads/data.csv", header=TRUE, sep=",")
MyData <- read.table("/Users/tianxuehu/Downloads/data.csv", header=TRUE, sep=",")
head(Mydata)
rm(list = ls())
Mydata <- read.csv("/Users/tianxuehu/Downloads/data.csv", header=TRUE, sep=",")
head(Mydata)
track_id = data.frame(table(Mydata$track.id))
track_id[track_id$Freq > 1,]
Mydata[Mydata$id %in% track_id$Var1[track_id$Freq > 1],]
View(track_id)
track_id[track_id$Freq > 1,]
Mydata[Mydata$id %in% track_id$Var1[track_id$Freq > 1],]
Mydata<- Mydata[11,]
View(Mydata)
Mydata <- read.csv("/Users/tianxuehu/Downloads/data.csv", header=TRUE, sep=",")
Mydata <- read.csv("/Users/tianxuehu/Downloads/data.csv",ncols = 8, header=TRUE, sep=",")
Mydata <- read.csv("/Users/tianxuehu/Downloads/data.csv",ncol = 8, header=TRUE, sep=",")
Mydata[duplicated(Mydata$track.id),]
Mydata<- Mydata[,0:11]
View(Mydata)
Mydata[(duplicated(Mydata$track.id, fromLast = FALSE) | duplicated(Mydata$track.id, fromLast = TRUE)),]
ids <- unique(Mydata$track.id)
id<-1
temp <- Mydata[Mydata$track.id == id, ]
View(temp)
new.dataframe <- c()
str(sort(colSums(temp[,2:length(data)]),
decreasing = TRUE)[1:3])
str(sort(colSums(temp[,3:length(data)]),
decreasing = TRUE)[1:3])
str(sort(colSums(temp[,5:length(data)]),
decreasing = TRUE)[1:3])
temp1 <-as.numeric(temp[,2:length(data)])
temp1 <-as.numeric(temp[,2:length(temp)])
View(temp)
temp1 <-as.numeric(temp[,3:length(temp)])
temp1 <-as.numeric(temp[,4:length(temp)])
temp1 <-as.numeric(temp[,2:11])
temp1 <-temp[2:11]
View(temp1)
temp1 <-temp[3:11]
View(temp1)
sum(temp1$sadness)
colSums(temp1)
which(sum==max(sum))
which.max(sum)
sumlist <-c(sum)
View(sumlist)
as.data.frame(sum)
summ.which.max(sum)
sum<-colSums(temp1)
list <- lapply(split(sum, names(sum)), unname)
View(list)
a<-c(list)
which(a==max(a))
max(list)
unname(coefficients(sum)[c("newx", "(Intercept)")])
unname(sum)
a<-c(unname(sum))
which(a==max(a))
sum
new.dataframe<-cbind(new.dataframe, id, index)
index <- which(a==max(a))
new.dataframe<-cbind(new.dataframe, id, index)
View(new.dataframe)
id<-2
temp <- Mydata[Mydata$track.id == id, ]
temp1 <-temp[3:11]
sum<-colSums(temp1)
unname(sum)
a<-c(unname(sum))
index <- which(a==max(a))
new.dataframe<-cbind(new.dataframe, id, index)
View(new.dataframe)
rm(list = ls())
Mydata <- read.csv("/Users/tianxuehu/Downloads/data.csv",ncol = 8, header=TRUE, sep=",")
Mydata<- Mydata[,0:11]
new.dataframe <- c()
new_dp
ids <- unique(Mydata$track.id)
Mydata <- read.csv("/Users/tianxuehu/Downloads/data.csv",ncol = 8, header=TRUE, sep=",")
Mydata <- read.csv("/Users/tianxuehu/Downloads/data.csv", header=TRUE, sep=",")
Mydata<- Mydata[,0:11]
new.dataframe <- c()
new_dp
ids <- unique(Mydata$track.id)
id<-1
temp <- Mydata[Mydata$track.id == id, ]
temp1 <-temp[3:11]
sum<-colSums(temp1)
unname(sum)
a<-c(unname(sum))
index <- which(a==max(a))
new_dp<-cbind(id ,index)
new.dataframe<-merge(new.dataframe,newdp)
id<-2
temp <- Mydata[Mydata$track.id == id, ]
temp1 <-temp[3:11]
sum<-colSums(temp1)
unname(sum)
a<-c(unname(sum))
index <- which(a==max(a))
new_dp<-cbind(id ,index)
new.dataframe<-merge(new.dataframe,newdp)
View(new_dp)
View(new_dp)
id<-1
rm(list = ls())
Mydata <- read.csv("/Users/tianxuehu/Downloads/data.csv", header=TRUE, sep=",")
Mydata<- Mydata[,0:11]
new.dataframe <- c()
new_dp
ids <- unique(Mydata$track.id)
id<-1
temp <- Mydata[Mydata$track.id == id, ]
temp1 <-temp[3:11]
sum<-colSums(temp1)
unname(sum)
a<-c(unname(sum))
index <- which(a==max(a))
new_dp<-cbind(id ,index)
new.dataframe<-rbind(new.dataframe,new_dp)
id<-2
temp <- Mydata[Mydata$track.id == id, ]
temp1 <-temp[3:11]
sum<-colSums(temp1)
unname(sum)
a<-c(unname(sum))
index <- which(a==max(a))
new_dp<-cbind(id ,index)
new.dataframe<-rbind(new.dataframe,new_dp)
View(new.dataframe)
rm(list = ls())
Mydata <- read.csv("/Users/tianxuehu/Downloads/data.csv", header=TRUE, sep=",")
Mydata<- Mydata[,0:11]
new.dataframe <- c()
new_dp
ids <- unique(Mydata$track.id)
for(id in ids){
temp <- Mydata[Mydata$track.id == id, ]
temp1 <-temp[3:11]
sum<-colSums(temp1)
unname(sum)
a<-c(unname(sum))
index <- which(a==max(a))
new_dp<-cbind(id ,index)
new.dataframe<-rbind(new.dataframe,new_dp)
}
View(new.dataframe)
write.csv(new.dataframe,'moodData.csv')
rm(list = ls())
Mydata <- read.csv("/Users/tianxuehu/Downloads/data.csv", header=TRUE, sep=",")
Mydata<- Mydata[,0:11]
new.dataframe <- c()
new_dp
ids <- unique(Mydata$track.id)
id = 11
temp <- Mydata[Mydata$track.id == id, ]
temp1 <-temp[3:11]
sum<-colSums(temp1)
unname(sum)
a<-c(unname(sum))
indexlist = c()
index <- which(a==max(a))
indexlist<-cbind(indexlist,index)
indexlist[1]
indexlist[0]
rm(list = ls())
Mydata <- read.csv("/Users/tianxuehu/Downloads/data.csv", header=TRUE, sep=",")
Mydata<- Mydata[,0:11]
new.dataframe <- c()
new_dp
ids <- unique(Mydata$track.id)
for(id in ids){
temp <- Mydata[Mydata$track.id == id, ]
temp1 <-temp[3:11]
sum<-colSums(temp1)
unname(sum)
a<-c(unname(sum))
indexlist = c()
index <- which(a==max(a))
indexlist<-cbind(indexlist,index)
new_dp<-cbind(id ,indexlist[1])
new.dataframe<-rbind(new.dataframe,new_dp)
}
View(new.dataframe)
write.csv(new.dataframe,'moodData.csv')
rm(list = ls())
Mydata <- read.csv("/Users/tianxuehu/Downloads/data.csv", header=TRUE, sep=",")
Mydata<- Mydata[,0:11]
new.dataframe <- c()
new_dp
ids <- unique(Mydata$track.id)
for(id in ids){
temp <- Mydata[Mydata$track.id == id, ]
temp1 <-temp[3:11]
sum<-colSums(temp1)
unname(sum)
a<-c(unname(sum))
indexlist = c()
index <- which(a==max(a))
indexlist<-cbind(indexlist,index)
new_dp<-cbind(id ,indexlist[1])
new.dataframe<-rbind(new.dataframe,new_dp)
colnames(new.dataframe)=c("track_id","Mood_Lable")
}
View(new.dataframe)
write.csv(new.dataframe,'moodData400.csv')
rm(list = ls())
Mydata <- read.csv("/Users/tianxuehu/Downloads/data.csv", header=TRUE, sep=",")
Mydata<- Mydata[,0:11]
new.dataframe <- c()
new_dp
ids <- unique(Mydata$track.id)
for(id in ids){
temp <- Mydata[Mydata$track.id == id, ]
temp1 <-temp[3:11]
sum<-colSums(temp1)
unname(sum)
a<-c(unname(sum))
indexlist = c()
index <- which(a==max(a))
indexlist<-cbind(indexlist,index)
new_dp<-cbind(id ,indexlist[1])
new.dataframe<-rbind(new.dataframe,new_dp)
colnames(new.dataframe)=c("track_id","Mood_Lable")
}
View(new.dataframe)
View(temp)
View(temp1)
View(new_dp)
View(indexlist)
new.dataframe$Mood_Label
new.dataframe[,2]
a <- table(lable)
label<-new.dataframe[,2]
a <- table(lable)
a <- table(label)
a
barplot(a, main="Mood Distribution",
xlab="Mood Lable Index")
barplot(a, main="Mood Distribution",
xlab="Mood Lable Index", col="blue")
barplot(a, main="Mood Distribution",
xlab="Mood Lable Index", col="lightblue")
library(ggplot2)
ggplot2.barplot(data=a, main="Mood Distribution", xName="Mood Lable Index", yName='Counts', col="lightblue")
library(ggplot2)
rm(list = ls())
Mydata <- read.csv("/Users/tianxuehu/Downloads/data.csv", header=TRUE, sep=",")
Mydata<- Mydata[,0:11]
new.dataframe <- c()
new_dp
ids <- unique(Mydata$track.id)
for(id in ids){
temp <- Mydata[Mydata$track.id == id, ]
temp1 <-temp[3:11]
sum<-colSums(temp1)
unname(sum)
a<-c(unname(sum))
indexlist = c()
index <- which(a==max(a))
indexlist<-cbind(indexlist,index)
new_dp<-cbind(id ,indexlist[1])
new.dataframe<-rbind(new.dataframe,new_dp)
colnames(new.dataframe)=c("track_id","Mood_Lable")
}
label<-new.dataframe[,2]
a <- table(label)
barplot(a, main="Mood Distribution",
xlab="Mood Lable Index", col="lightblue")
ggplot2.barplot(data=a, main="Mood Distribution", xName="Mood Lable Index", yName='Counts', col="lightblue")
ggplot2.barplot(data=a, main="Mood Distribution", xName="Mood Lable Index", yName='Counts')
ggplot2.barplot(data=a, main='Mood Distribution', xName='Mood Lable Index', yName='Counts')
barplot(a, main="Mood Distribution",
xlab="Mood Lable Index", ylab = "Number of Tracks",col="lightblue")
setwd('/Users/tianxuehu/desktop/hw2-skeleton/Q1')
rm(list = ls())
data15 <- read.csv('q1-15.csv',header=TRUE, sep=",")
data16 <- read.csv('q1-16.csv',header=TRUE, sep=",")
#country
table(data16$Region)
sum<-aggregate(data16$Total.Profit, by=list(Category=data16$Region), function(x) max(c(x)))
sum
table(data$Order.Date)
asia<-subset(data, data$Region=='Asia')
aus<-subset(data, data$Region=='Australia and Oceania')
table(data$Order.Date)
